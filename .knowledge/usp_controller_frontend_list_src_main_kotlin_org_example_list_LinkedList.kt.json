{"is_source_file": true, "format": "Kotlin", "description": "This Kotlin file defines a singly linked list implementation with basic operations such as add, remove, size, and get. It includes an internal Node class and utility functions to manipulate linked list nodes.", "external_files": [], "external_methods": [], "published": ["list", "LinkedList", "add", "remove", "size", "get"], "classes": [{"name": "LinkedList", "description": "A class representing a singly linked list with methods to add, remove, retrieve size, and get elements by index."}, {"name": "Node", "description": "An internal class representing a node in the linked list, holding string data and a reference to the next node."}], "methods": [{"name": "add", "description": "Adds a new element to the end of the linked list."}, {"name": "remove", "description": "Removes the first occurrence of the specified element from the list."}, {"name": "size", "description": "Returns the number of elements in the list."}, {"name": "get", "description": "Retrieves the element at the specified index; throws exception if out of bounds."}, {"name": "unlink", "description": "Private helper to unlink a node from the list."}, {"name": "tail", "description": "Private companion object method to find the last node in the list."}], "calls": ["tail", "unlink", "java.lang.IndexOutOfBoundsException"], "search-terms": ["LinkedList", "add method", "remove method", "size method", "get method", "Node class", "list manipulation Kotlin"], "state": 2, "file_id": 31, "knowledge_revision": 80, "git_revision": "da1d39dd690b5f2f65c0e865518e714915aa8220", "hash": "a4ff5a071c1491fad8c1a93e5dd6a39e", "format-version": 4, "code-base-name": "usp_controller_frontend", "filename": "usp_controller_frontend/list/src/main/kotlin/org/example/list/LinkedList.kt", "revision_history": [{"80": "da1d39dd690b5f2f65c0e865518e714915aa8220"}]}